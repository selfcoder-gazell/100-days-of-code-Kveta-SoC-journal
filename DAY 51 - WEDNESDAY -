### DAY 51: NOVEMBER 1, WEDNESDAY, 2023 ()

** Today's PROGRESS**:
Today we had Stuart Ecuyer coming to our boot camp to give us a speech about accessibility criteria.
He works for methods.co.uk - there are few programs for new employees - 
interested in becoming a cyber security team member or business analyst. 
https://methods.co.uk/careers/gravitate/


MORNING:
This morning we were revising the MVC model (Media, View, Controler). The link below for details. 
https://developer.mozilla.org/en-US/docs/Glossary/MVC

Our Coach Loz sent us a feedback link for our presentation last week. 
https://schoolofcode.notion.site/Team-7-d4cbf76b28414d458a24826329b46da4?pvs=4
# Team 7
“If they could provide a slide to introduce the problem, as my colleague and I felt lost when they were introducing the problem verbally”
---
“Great idea for a psychological app to aid learning. Very clear problem space definition and product definition. 
It looked like the boot campers brought all of their collective previous work experience to boost the ideas! Which was great!
Great voting ideas and use of team allocation, but this could've been brought to life in their manifesto. Use of [gartic. io](http://gartic.io/) was a great team idea.”
---
“Demo was a little short and did not show off much of the app, would have liked to see more!”

AFTERNOON:
Backend deployment (45 minutes):
Accept the classroom link (it’s a group repo): https://classroom.github.com/a/Fp386WZH
Try to get the application running locally first (you’ll need to set up a PostgreSQL database, set 
the connection string as an environment variable in the .env file, and run the NPM db-reset script)
Use the information within https://render.com/docs/web-services#deploying-from-a-git-repository to 
deploy the backend to Render. You’ll need to sign up for an account. Pay close attention to the host and port 
configuration section on that page.
Use the information within https://render.com/docs/configure-environment-variables#1-per-service-environment-variables 
to configure environment variables for your deployed API.
If things aren’t working, look at the “logs” for your web service in Render. See if you can spot any clues/error messages there.
Goal:
Set up automated deployment, so that each time you push to GitHub, the API is redeployed (with the latest commit).
Get a URL from Render (where the deployed backend is running)
Check the deployed API works by sending a request to a supported path (e.g. GET /jokes/random). You should get some JSON back.
Check if redeployments work by making a small change (maybe adding a new API endpoint). You’ll need to push to GitHub to trigger a redeploy.

** THOUGHTS:**


** LINK TO WORK:
https://developer.mozilla.org/en-US/docs/Glossary/MVC
https://classroom.github.com/a/Fp386WZH
